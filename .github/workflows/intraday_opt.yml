name: intraday-options-paper

on:
  workflow_dispatch:
    inputs:
      symbol:
        description: "Index symbol (NIFTY/BANKNIFTY)"
        required: false
        default: "NIFTY"
      start:
        description: "Start date (YYYY-MM-DD) — leave blank to use yesterday"
        required: false
        default: ""
      end:
        description: "End date (YYYY-MM-DD) — leave blank to use yesterday"
        required: false
        default: ""
      interval:
        description: "Candle interval"
        required: false
        default: "5m"
      mode:
        description: "Run mode (paper/live)"
        required: false
        default: "paper"
      outdir:
        description: "Reports output directory"
        required: false
        default: "./reports"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add repo to PYTHONPATH
        run: echo "PYTHONPATH=$PWD:$PYTHONPATH" >> $GITHUB_ENV

      # Optional: verify Zerodha profile if you keep this helper
      - name: Preflight Zerodha profile (non-fatal for paper)
        continue-on-error: true
        run: |
          python verify_kite.py || true

      - name: Compute default dates (yesterday) if inputs empty
        shell: bash
        run: |
          # yesterday in UTC; good enough for backfill. Adjust to IST if you prefer.
          YESTERDAY="$(date -u -d 'yesterday' +%F)"
          if [ -z "${{ github.event.inputs.start }}" ]; then echo "START_DATE=$YESTERDAY" >> $GITHUB_ENV; else echo "START_DATE=${{ github.event.inputs.start }}" >> $GITHUB_ENV; fi
          if [ -z "${{ github.event.inputs.end }}" ]; then echo "END_DATE=$YESTERDAY" >> $GITHUB_ENV; else echo "END_DATE=${{ github.event.inputs.end }}" >> $GITHUB_ENV; fi

      - name: Run intraday options (paper)
        env:
          SYMBOL: ${{ github.event.inputs.symbol || 'NIFTY' }}
          INTERVAL: ${{ github.event.inputs.interval || '5m' }}
          MODE: ${{ github.event.inputs.mode || 'paper' }}
          OUTDIR: ${{ github.event.inputs.outdir || './reports' }}
        run: |
          mkdir -p reports logs
          echo "Using: symbol=$SYMBOL $START_DATE..$END_DATE interval=$INTERVAL mode=$MODE outdir=$OUTDIR"
          python runner_intraday_options.py \
            --symbol "$SYMBOL" \
            --start "$START_DATE" \
            --end "$END_DATE" \
            --interval "$INTERVAL" \
            --mode "$MODE" \
            --outdir "$OUTDIR" || true

      - name: Ensure minimal report (never send 'No summary')
        run: |
          python tools/ensure_metrics.py --dir "./reports"

      - name: Upload artifacts (reports + logs)
        uses: actions/upload-artifact@v4
        with:
          name: intraday-artifacts
          path: |
            reports/**
            logs/**

      - name: Notify Telegram (summary + charts)
        if: always()
        run: |
          python tools/telegram_notify.py --dir "./reports"

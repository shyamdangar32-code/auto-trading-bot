name: intraday-options-paper

on:
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      # Zerodha (paper run still verifies token/profile)
      ZERODHA_API_KEY:      ${{ secrets.ZERODHA_API_KEY }}
      ZERODHA_API_SECRET:   ${{ secrets.ZERODHA_API_SECRET }}
      ZERODHA_ACCESS_TOKEN: ${{ secrets.ZERODHA_ACCESS_TOKEN }}
      # Telegram (optional but recommended)
      TELEGRAM_BOT_TOKEN:   ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID:     ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add repo to PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE:$PYTHONPATH" >> $GITHUB_ENV

      - name: Preflight Zerodha profile (must pass)
        run: |
          python - <<'PY'
          import os, sys
          from kiteconnect import KiteConnect
          api_key = (os.getenv("ZERODHA_API_KEY") or "").strip()
          access  = (os.getenv("ZERODHA_ACCESS_TOKEN") or "").strip()
          kite = KiteConnect(api_key=api_key); kite.set_access_token(access)
          try:
              p = kite.profile()
              print("✅ Token works! User:", p.get("user_name"), "| ID:", p.get("user_id"))
          except Exception as e:
              print("❌ Zerodha preflight failed:", e); sys.exit(3)
          PY

      - name: Run intraday options (paper)
        run: |
          mkdir -p reports logs
          python runner_intraday_options.py --out_dir "./reports" | tee logs/intraday.log

      # NEW: guarantee minimal artifacts even on a no-trade day
      - name: Ensure reports exist (even if no trades)
        run: |
          python tools/ensure_metrics.py --dir "./reports" --note "No signals generated today."

      - name: Upload artifacts (reports + logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: intraday-artifacts
          path: |
            reports/**
            logs/**

      - name: Notify Telegram (summary + charts)
        if: always()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python tools/telegram_notify.py --dir reports

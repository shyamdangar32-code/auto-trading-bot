name: intraday-options-paper

on:
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest

    # Job-level env (available to all steps)
    env:
      ZERODHA_API_KEY: ${{ secrets.ZERODHA_API_KEY }}
      ZERODHA_API_SECRET: ${{ secrets.ZERODHA_API_SECRET }}
      ZERODHA_ACCESS_TOKEN: ${{ secrets.ZERODHA_ACCESS_TOKEN }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Put envs into config.yaml at runtime if fields are blank
        run: |
          python - <<'PY'
          import os, yaml
          with open("config.yaml","r") as f:
              cfg = yaml.safe_load(f)
          # backfill Telegram if missing
          if not cfg.get("intraday_options"): cfg["intraday_options"] = {}
          if not cfg["intraday_options"].get("telegram_bot_token"):
              cfg["intraday_options"]["telegram_bot_token"] = os.getenv("TELEGRAM_BOT_TOKEN","")
          if not cfg["intraday_options"].get("telegram_chat_id"):
              cfg["intraday_options"]["telegram_chat_id"] = os.getenv("TELEGRAM_CHAT_ID","")
          with open("config.yaml","w") as f:
              yaml.safe_dump(cfg, f, sort_keys=False)
          PY

      - name: Fingerprint envs (safe)
        run: |
          python - <<'PY'
          import os
          def fp(x): 
              x=(x or "").strip()
              return f"{x[:4]}... (len={len(x)})" if x else "MISSING"
          print("API_KEY      :", fp(os.getenv("ZERODHA_API_KEY")))
          print("ACCESS_TOKEN :", fp(os.getenv("ZERODHA_ACCESS_TOKEN")))
          PY

      - name: Preflight Zerodha credentials
        run: |
          python verify_kite.py

      - name: Run intraday options (paper)
        # add env here TOO, to be absolutely sure
        env:
          ZERODHA_API_KEY: ${{ secrets.ZERODHA_API_KEY }}
          ZERODHA_ACCESS_TOKEN: ${{ secrets.ZERODHA_ACCESS_TOKEN }}
        run: |
          python runner_intraday_options.py --out_dir "./reports"

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/**

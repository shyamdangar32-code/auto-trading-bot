name: daily-trade-run

on:
  workflow_dispatch: {}
  schedule:
    - cron: "20 10 * * 1-5"  # 10:20 UTC, Mon–Fri

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      # 👇 CHANGE THIS if your script is somewhere else
      SCRIPT_PATH: tools/refresh_zerodha_token.py
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Try to refresh the token if a request_token is provided.
      # Doesn't fail the job even if refresh fails.
      - name: Refresh Zerodha access token (best effort)
        id: refresh
        continue-on-error: true
        env:
          ZERODHA_API_KEY:       ${{ secrets.ZERODHA_API_KEY }}
          ZERODHA_API_SECRET:    ${{ secrets.ZERODHA_API_SECRET }}
          ZERODHA_REQUEST_TOKEN: ${{ secrets.ZERODHA_REQUEST_TOKEN }}
        run: |
          if [ -n "${ZERODHA_REQUEST_TOKEN}" ]; then
            if [ -f "${SCRIPT_PATH}" ]; then
              echo "Running ${SCRIPT_PATH}"
              python "${SCRIPT_PATH}"
            else
              echo "❌ Script not found at ${SCRIPT_PATH}"
              exit 1
            fi
          else
            echo "ℹ️ No ZERODHA_REQUEST_TOKEN secret set; skipping refresh."
            exit 0
          fi

      # Pick token: prefer fresh token file, else fall back to the stored secret
      - name: Select token (fresh file or secret)
        run: |
          if [ -f zerodha_access_token.txt ]; then
            echo "Using freshly generated token from file."
            echo "ZERODHA_ACCESS_TOKEN=$(cat zerodha_access_token.txt)" >> $GITHUB_ENV
          else
            echo "Using ZERODHA_ACCESS_TOKEN from repo secrets."
            echo "ZERODHA_ACCESS_TOKEN=${{ secrets.ZERODHA_ACCESS_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Run strategy (paper; Zerodha on; Yahoo fallback via code)
        env:
          TELEGRAM_BOT_TOKEN:   ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:     ${{ secrets.TELEGRAM_CHAT_ID }}
          ZERODHA_API_KEY:      ${{ secrets.ZERODHA_API_KEY }}
          ZERODHA_API_SECRET:   ${{ secrets.ZERODHA_API_SECRET }}
          ZERODHA_ACCESS_TOKEN: ${{ env.ZERODHA_ACCESS_TOKEN }}
        run: |
          python runner.py \
            --out_dir "./reports"

      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/*

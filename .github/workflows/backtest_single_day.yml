name: Single-day Backtest

on:
  workflow_dispatch:
    inputs:
      date:
        description: "Backtest date (YYYY-MM-DD). ખાલી રાખો તો auto=છેલ્લો શુક્રવાર"
        required: false
        default: ""
      underlying:
        description: "Symbol (NIFTY / BANKNIFTY)"
        required: true
        default: "NIFTY"
      interval:
        description: "Interval (e.g., 1m, 3m, 5m, 15m)"
        required: true
        default: "1m"
      capital_rs:
        description: "Capital (₹)"
        required: true
        default: "100000"
      order_qty:
        description: "Fallback order qty"
        required: true
        default: "1"

jobs:
  single-day:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [loose, medium, strict]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Compute start/end dates (single day window)
        id: dates
        shell: bash
        run: |
          python - <<'PY'
          import os, sys, datetime as dt
          inp = os.getenv("INPUT_DATE","").strip()
          # જો date ન હોય તો છેલ્લો શુક્રવાર
          if not inp:
            today = dt.date.today()
            # weekday(): Mon=0 ... Sun=6 ; Fri=4
            delta = (today.weekday() - 4) % 7
            if delta == 0: delta = 7
            d = today - dt.timedelta(days=delta)
          else:
            d = dt.date.fromisoformat(inp)
          start = d.isoformat()
          end   = (d + dt.timedelta(days=1)).isoformat()
          # GitHub outputs
          print(f"start={start}")
          print(f"end={end}")
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            f.write(f"start={start}\n")
            f.write(f"end={end}\n")
          PY

      # ---- 💡 PYTHONPATH fix so `from bot...` works ----
      - name: Add repo to PYTHONPATH
        run: |
          echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Run backtest (single day • ${{ matrix.profile }})
        env:
          ZERODHA_API_KEY: ${{ secrets.ZERODHA_API_KEY }}
          ZERODHA_ACCESS_TOKEN: ${{ secrets.ZERODHA_ACCESS_TOKEN }}
        run: |
          python tools/run_backtest.py \
            --underlying "${{ inputs.underlying }}" \
            --start "${{ steps.dates.outputs.start }}" \
            --end   "${{ steps.dates.outputs.end }}" \
            --interval "${{ inputs.interval }}" \
            --capital_rs "${{ inputs.capital_rs }}" \
            --order_qty "${{ inputs.order_qty }}" \
            --outdir "reports/${{ matrix.profile }}" \
            --use_block "backtest_${{ matrix.profile }}"

      - name: Upload artifacts (single day • ${{ matrix.profile }})
        uses: actions/upload-artifact@v4
        with:
          name: single-day-${{ matrix.profile }}-${{ steps.dates.outputs.start }}
          path: reports/${{ matrix.profile }}/*
          if-no-files-found: warn

name: Backtest (single day)

on:
  workflow_dispatch:
    inputs:
      underlying:
        description: "Symbol (NIFTY / BANKNIFTY)"
        required: true
        default: "NIFTY"
      date:
        description: "Trading date (YYYY-MM-DD) — single day backtest"
        required: true
        default: "2025-09-12"
      interval:
        description: "Interval (1m/3m/5m/15m/day)"
        required: true
        default: "1m"
      profile:
        description: "Profile (loose / medium / strict)"
        required: true
        default: "loose"
      capital_rs:
        description: "Starting capital (₹)"
        required: true
        default: "100000"
      order_qty:
        description: "Fallback order qty"
        required: true
        default: "1"

jobs:
  single-day:
    runs-on: ubuntu-latest

    env:
      # Zerodha creds from repo → Settings → Secrets and variables → Actions
      ZERODHA_API_KEY: ${{ secrets.ZERODHA_API_KEY }}
      ZERODHA_ACCESS_TOKEN: ${{ secrets.ZERODHA_ACCESS_TOKEN }}
      ZERODHA_API_SECRET: ${{ secrets.ZERODHA_API_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Compute start/end dates (single day window)
        id: dates
        shell: bash
        run: |
          PYCODE=$(cat << 'PY'
          import os, datetime as dt
          d = os.environ["INPUT_DATE"]
          start = dt.datetime.strptime(d, "%Y-%m-%d").date()
          end = start + dt.timedelta(days=1)   # Zerodha API expects start < end
          print(f"start={start}")
          print(f"end={end}")
          PY
          )
          INPUT_DATE='${{ github.event.inputs.date }}' INPUT_DATE="$INPUT_DATE" python - <<'PY' "$PYCODE" > dates.out
          # Export to GITHUB_OUTPUT
          START=$(grep '^start=' dates.out | cut -d= -f2)
          END=$(grep '^end=' dates.out | cut -d= -f2)
          echo "start=$START" >> "$GITHUB_OUTPUT"
          echo "end=$END"     >> "$GITHUB_OUTPUT"
        env:
          INPUT_DATE: ${{ github.event.inputs.date }}

      - name: Run backtest (single day)
        env:
          # pass through to the script via args; env kept for libs if needed
          TZ: Asia/Kolkata
        run: |
          PROFILE="backtest_${{ github.event.inputs.profile }}"
          python -m tools.run_backtest \
            --underlying "${{ github.event.inputs.underlying }}" \
            --start "${{ steps.dates.outputs.start }}" \
            --end "${{ steps.dates.outputs.end }}" \
            --interval "${{ github.event.inputs.interval }}" \
            --capital_rs "${{ github.event.inputs.capital_rs }}" \
            --order_qty "${{ github.event.inputs.order_qty }}" \
            --outdir "reports/single-day" \
            --use_block "$PROFILE"

      - name: Upload artifacts (single day)
        uses: actions/upload-artifact@v4
        with:
          name: single-day-${{ github.event.inputs.underlying }}-${{ github.event.inputs.date }}-${{ github.event.inputs.profile }}
          path: |
            reports/single-day/**
            !**/__pycache__/**
          if-no-files-found: warn

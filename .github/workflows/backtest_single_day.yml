name: Backtest (single day)

on:
  workflow_dispatch:
    inputs:
      date:
        description: "Trading date (YYYY-MM-DD) — single day window start"
        required: true
        default: "2025-09-12"
      underlying:
        description: "Symbol (NIFTY or BANKNIFTY)"
        required: true
        default: "NIFTY"
      interval:
        description: "Bar interval (1m/3m/5m/15m/…)"
        required: true
        default: "1m"
      capital_rs:
        description: "Starting capital (₹)"
        required: false
        default: "100000"
      order_qty:
        description: "Fallback order quantity"
        required: false
        default: "1"

jobs:
  single-day:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        profile: [loose, medium, strict]   # runs 3 variants
    env:
      # Zerodha creds must be set in repo: Settings → Secrets and variables → Actions
      ZERODHA_API_KEY: ${{ secrets.ZERODHA_API_KEY }}
      ZERODHA_ACCESS_TOKEN: ${{ secrets.ZERODHA_ACCESS_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Compute start/end dates (single day window)
        id: dates
        run: |
          python - <<'PY'
          import os, datetime as dt
          d = os.environ["INPUT_DATE"]
          start = dt.datetime.strptime(d, "%Y-%m-%d").date()
          end = start + dt.timedelta(days=1)   # Zerodha API requires end > start
          # write to GITHUB_OUTPUT
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"start={start}\n")
              f.write(f"end={end}\n")
          PY
        env:
          INPUT_DATE: ${{ github.event.inputs.date }}

      - name: Run backtest (single day • ${{ matrix.profile }})
        run: |
          python tools/run_backtest.py \
            --underlying "${{ github.event.inputs.underlying }}" \
            --start "${{ steps.dates.outputs.start }}" \
            --end   "${{ steps.dates.outputs.end }}" \
            --interval "${{ github.event.inputs.interval }}" \
            --capital_rs "${{ github.event.inputs.capital_rs }}" \
            --order_qty "${{ github.event.inputs.order_qty }}" \
            --outdir "reports/${{ matrix.profile }}" \
            --use_block "backtest_${{ matrix.profile }}"

      - name: Upload artifacts (single day • ${{ matrix.profile }})
        uses: actions/upload-artifact@v4
        with:
          name: single-day-${{ matrix.profile }}
          path: reports/${{ matrix.profile }}/
          if-no-files-found: error

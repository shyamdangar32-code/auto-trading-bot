name: Multi-day Backtest

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: "Start date (YYYY-MM-DD)"
        required: true
      end_date:
        description: "End date (YYYY-MM-DD) — inclusive"
        required: true
      underlying:
        description: "Symbol (NIFTY or BANKNIFTY)"
        required: true
        default: "NIFTY"
      interval:
        description: "Interval (e.g., 1m, 3m, 5m, 15m)"
        required: true
        default: "1m"
      capital_rs:
        description: "Capital (₹)"
        required: true
        default: "100000"
      order_qty:
        description: "Fallback order qty"
        required: true
        default: "1"

jobs:
  multi-day:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [loose, medium, strict]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # make `from bot...` imports work
      - name: Add repo to PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Run backtest for each day (profile = ${{ matrix.profile }})
        env:
          ZERODHA_API_KEY: ${{ secrets.ZERODHA_API_KEY }}
          ZERODHA_ACCESS_TOKEN: ${{ secrets.ZERODHA_ACCESS_TOKEN }}
        run: |
          python - <<'PY'
          import os, subprocess, datetime as dt
          start = dt.date.fromisoformat("${{ inputs.start_date }}")
          end   = dt.date.fromisoformat("${{ inputs.end_date }}")
          # loop inclusive of end_date
          d = start
          while d <= end:
              next_d = d + dt.timedelta(days=1)
              outdir = f"reports/${{ matrix.profile }}/{d.isoformat()}"
              cmd = [
                  "python", "tools/run_backtest.py",
                  "--underlying", "${{ inputs.underlying }}",
                  "--start", d.isoformat(),
                  "--end", next_d.isoformat(),
                  "--interval", "${{ inputs.interval }}",
                  "--capital_rs", "${{ inputs.capital_rs }}",
                  "--order_qty", "${{ inputs.order_qty }}",
                  "--outdir", outdir,
                  "--use_block", "backtest_${{ matrix.profile }}"
              ]
              print("▶", " ".join(cmd), flush=True)
              subprocess.run(cmd, check=True)
              d = next_d
          PY
      - name: Upload artifacts (multi-day • ${{ matrix.profile }})
        uses: actions/upload-artifact@v4
        with:
          name: multi-day-${{ matrix.profile }}-${{ inputs.start_date }}-to-${{ inputs.end_date }}
          path: reports/${{ matrix.profile }}/**
          if-no-files-found: warn

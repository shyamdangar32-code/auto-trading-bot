name: Multi-day Backtest

on:
  workflow_dispatch:
    inputs:
      start:
        description: "Start date (YYYY-MM-DD)"
        required: true
        default: "2025-09-08"
      end:
        description: "End date (YYYY-MM-DD) inclusive"
        required: true
        default: "2025-09-12"
      underlying:
        description: "Symbol (NIFTY / BANKNIFTY)"
        required: true
        default: "NIFTY"
      interval:
        description: "Interval (1m, 3m, 5m, 15m)"
        required: true
        default: "1m"
      capital_rs:
        description: "Capital (₹)"
        required: true
        default: "100000"
      order_qty:
        description: "Fallback order qty"
        required: true
        default: "1"

jobs:
  multi-day:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [loose, medium, strict]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Export PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Run per-day backtests and merge
        env:
          ZERODHA_API_KEY: ${{ secrets.ZERODHA_API_KEY }}
          ZERODHA_ACCESS_TOKEN: ${{ secrets.ZERODHA_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          START="${{ inputs.start }}"
          END="${{ inputs.end }}"

          # temp output for per-day reports
          OUTROOT="tmp_reports"
          mkdir -p "$OUTROOT"

          # generate date list (inclusive)
          python - <<'PY' > days.txt
import sys, datetime as dt, os
s = dt.date.fromisoformat(os.environ["START"])
e = dt.date.fromisoformat(os.environ["END"])
d = s
while d <= e:
    print(d.isoformat())
    d += dt.timedelta(days=1)
PY

          while read D; do
            echo "▶ Backtesting $D ..."
            python tools/run_backtest.py \
              --underlying "${{ inputs.underlying }}" \
              --start "$D" \
              --end   "$(python - <<PY
import datetime as dt,sys,os
d = dt.date.fromisoformat(sys.argv[1]) + dt.timedelta(days=1)
print(d.isoformat())
PY "$D")" \
              --interval "${{ inputs.interval }}" \
              --capital_rs "${{ inputs.capital_rs }}" \
              --order_qty "${{ inputs.order_qty }}" \
              --outdir   "$OUTROOT/$D" \
              --use_block "backtest_${{ matrix.profile }}"
          done < days.txt

          # merge all days into a single folder
          python tools/merge_reports.py \
            --root "$OUTROOT" \
            --out "reports/${{ matrix.profile }}" \
            --capital_rs "${{ inputs.capital_rs }}"

      - name: Upload merged artifact
        uses: actions/upload-artifact@v4
        with:
          name: multi-day-${{ matrix.profile }}-${{ inputs.start }}-to-${{ inputs.end }}
          path: reports/${{ matrix.profile }}/*
          if-no-files-found: error

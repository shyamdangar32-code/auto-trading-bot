name: backtest

on:
  workflow_dispatch:
    inputs:
      symbol:
        description: "Index symbol (NIFTY or BANKNIFTY)"
        required: true
        default: "BANKNIFTY"
      start:
        description: "Start date (YYYY-MM-DD, inclusive)"
        required: true
        default: "2025-07-01"
      end:
        description: "End date (YYYY-MM-DD, inclusive)"
        required: true
        default: "2025-08-01"
      interval:
        description: "Candle interval"
        required: true
        default: "5m"
      capital_rs:
        description: "Starting capital (₹)"
        required: true
        default: "100000"
      order_qty:
        description: "Order quantity"
        required: true
        default: "1"
      slippage_bps:
        description: "Slippage in bps (e.g., 5 = 0.05%)"
        required: true
        default: "0"
      broker_flat:
        description: "Broker flat fee (₹ per order)"
        required: true
        default: "0"
      broker_pct:
        description: "Brokerage percent (e.g., 0.02 for 0.02%)"
        required: true
        default: "0"
      max_trades_per_day:
        description: "Hard cap on daily trades (0 = unlimited)"
        required: true
        default: "0"

jobs:
  run:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Set up job
        run: echo "Starting backtest…"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add repo to PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Run backtest
        env:
          SYMBOL:               ${{ github.event.inputs.symbol }}
          START:                ${{ github.event.inputs.start }}
          END:                  ${{ github.event.inputs.end }}
          INTERVAL:             ${{ github.event.inputs.interval }}
          CAPITAL_RS:           ${{ github.event.inputs.capital_rs }}
          ORDER_QTY:            ${{ github.event.inputs.order_qty }}
          SLIPPAGE_BPS:         ${{ github.event.inputs.slippage_bps }}
          BROKER_FLAT:          ${{ github.event.inputs.broker_flat }}
          BROKER_PCT:           ${{ github.event.inputs.broker_pct }}
          MAX_TRADES_PER_DAY:   ${{ github.event.inputs.max_trades_per_day }}
        run: |
          set -e
          mkdir -p reports logs
          echo "▶ Running backtest for $SYMBOL from $START to $END ($INTERVAL)…"
          python tools/run_backtest.py \
            --symbol "$SYMBOL" \
            --start "$START" \
            --end "$END" \
            --interval "$INTERVAL" \
            --outdir "./reports" \
            --capital_rs "$CAPITAL_RS" \
            --order_qty "$ORDER_QTY" \
            --slippage_bps "$SLIPPAGE_BPS" \
            --broker_flat "$BROKER_FLAT" \
            --broker_pct "$BROKER_PCT" \
            --max_trades_per_day "$MAX_TRADES_PER_DAY"

      - name: Ensure minimal report (never send 'No summary')
        run: |
          python tools/ensure_metrics.py --dir "./reports"

      - name: Upload artifacts (reports + logs)
        uses: actions/upload-artifact@v4
        with:
          name: backtest-artifacts
          path: |
            reports/**
            logs/**
          if-no-files-found: warn
          retention-days: 7

      - name: Notify Telegram (summary + charts)
        if: ${{ secrets.TELEGRAM_BOT_TOKEN && secrets.TELEGRAM_CHAT_ID }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:  ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python tools/telegram_notify.py --dir ./reports || true

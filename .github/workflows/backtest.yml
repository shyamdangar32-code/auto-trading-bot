name: backtest

on:
  workflow_dispatch:
    inputs:
      symbol:
        description: "NIFTY or BANKNIFTY"
        required: true
        default: "BANKNIFTY"
      start:
        description: "YYYY-MM-DD (inclusive)"
        required: true
        default: "2025-07-01"
      end:
        description: "YYYY-MM-DD (inclusive)"
        required: true
        default: "2025-08-01"
      interval:
        description: "Candle interval"
        required: true
        default: "5m"
      capital:
        description: "Starting capital (â‚¹)"
        required: true
        default: "100000"
      qty:
        description: "Order quantity"
        required: true
        default: "1"

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Add repo to PYTHONPATH
        run: echo "${{ github.workspace }}" >> $GITHUB_PATH

      - name: Run backtest
        run: |
          python tools/run_backtest.py \
            --symbol "${{ github.event.inputs.symbol }}" \
            --start "${{ github.event.inputs.start }}" \
            --end "${{ github.event.inputs.end }}" \
            --interval "${{ github.event.inputs.interval }}" \
            --capital_rs "${{ github.event.inputs.capital }}" \
            --order_qty "${{ github.event.inputs.qty }}" \
            --out_dir "./reports"

      - name: Ensure minimal report
        if: always()
        run: |
          python tools/ensure_report.py --dir "./reports"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backtest-artifacts
          path: |
            reports/**
            logs/**

      - name: Notify Telegram
        if: always()
        run: |
          python tools/telegram_notify.py --dir "./reports" --title "Backtest Complete"

name: backtest

"on":
  workflow_dispatch:
    inputs:
      symbol:
        description: "Index symbol (NIFTY or BANKNIFTY)"
        required: true
        default: "BANKNIFTY"
      start:
        description: "Start date (YYYY-MM-DD, inclusive)"
        required: true
        default: "2025-07-01"
      end:
        description: "End date (YYYY-MM-DD, inclusive)"
        required: true
        default: "2025-08-01"
      interval:
        description: "Candle interval (e.g., 5m, 15m)"
        required: true
        default: "5m"
      capital:
        description: "Starting capital (₹)"
        required: true
        default: "100000"
      qty:
        description: "Order quantity"
        required: true
        default: "1"
      slippage_bps:
        description: "Slippage in bps (e.g., 5 = 0.05%)"
        required: false
        default: "0"
      broker_flat:
        description: "Broker flat fee (₹ per order)"
        required: false
        default: "0"
      broker_pct:
        description: "Brokerage percent (e.g., 0.02 = 0.02%)"
        required: false
        default: "0"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add repo to PYTHONPATH
        run: echo "$PWD" >> $GITHUB_PATH

      - name: Run backtest
        env:
          SYMBOL:        ${{ github.event.inputs.symbol }}
          START:         ${{ github.event.inputs.start }}
          END:           ${{ github.event.inputs.end }}
          INTERVAL:      ${{ github.event.inputs.interval }}
          CAPITAL_RS:    ${{ github.event.inputs.capital }}
          QTY:           ${{ github.event.inputs.qty }}
          SLIPPAGE_BPS:  ${{ github.event.inputs.slippage_bps }}
          BROKER_FLAT:   ${{ github.event.inputs.broker_flat }}
          BROKER_PCT:    ${{ github.event.inputs.broker_pct }}
        run: |
          mkdir -p reports logs
          EXTRA=""
          if [ -n "${SLIPPAGE_BPS}" ] && [ "${SLIPPAGE_BPS}" != "0" ]; then
            EXTRA="$EXTRA --slippage_bps ${SLIPPAGE_BPS}"
          fi
          if [ -n "${BROKER_FLAT}" ] && [ "${BROKER_FLAT}" != "0" ]; then
            EXTRA="$EXTRA --broker_flat ${BROKER_FLAT}"
          fi
          if [ -n "${BROKER_PCT}" ] && [ "${BROKER_PCT}" != "0" ]; then
            EXTRA="$EXTRA --broker_pct ${BROKER_PCT}"
          fi

          echo "Config:"
          echo "  symbol=${SYMBOL}  start=${START}  end=${END}  interval=${INTERVAL}"
          echo "  capital_rs=${CAPITAL_RS}  qty=${QTY}"
          echo "  extra=${EXTRA}"

          python tools/run_backtest.py \
            --symbol "${SYMBOL}" \
            --start "${START}" \
            --end "${END}" \
            --interval "${INTERVAL}" \
            --capital "${CAPITAL_RS}" \
            --qty "${QTY}" \
            --outdir ./reports \
            ${EXTRA} | tee logs/backtest.log

      - name: Show reports (preview)
        if: always()
        run: |
          echo "reports/ contains:"
          ls -lah reports || true

      - name: Ensure minimal report (never send 'No summary')
        run: |
          python tools/ensure_report.py --dir "./reports"
          python tools/ensure_metrics.py --dir "./reports"

      - name: Upload artifacts (reports + logs)
        uses: actions/upload-artifact@v4
        with:
          name: backtest-artifacts
          path: |
            reports/**
            logs/**
            !**/*.ipynb_checkpoints/**

      - name: Notify Telegram (summary + charts)
        if: always()
        run: |
          python tools/telegram_notify.py --dir "./reports"

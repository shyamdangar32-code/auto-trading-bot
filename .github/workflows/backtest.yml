name: backtest

on:
  workflow_dispatch:
    inputs:
      symbol:
        description: "NIFTY or BANKNIFTY"
        required: true
        default: "BANKNIFTY"
        type: choice
        options:
          - NIFTY
          - BANKNIFTY
      start:
        description: "YYYY-MM-DD (inclusive)"
        required: true
        default: "2025-07-01"
      end:
        description: "YYYY-MM-DD (inclusive)"
        required: true
        default: "2025-08-01"
      interval:
        description: "Candle interval"
        required: true
        default: "5m"
        type: choice
        options: ["1m","3m","5m","10m","15m"]
      capital:
        description: "Starting capital (₹)"
        required: true
        default: "100000"
      qty:
        description: "Order quantity"
        required: true
        default: "1"
      slippage_bps:
        description: "Slippage in bps (e.g., 5 = 0.05%)"
        required: false
        default: "0"
      broker_flat:
        description: "Broker flat fee (₹ per order)"
        required: false
        default: "0"
      broker_pct:
        description: "Brokerage percent (e.g., 0.02 for 0.02%)"
        required: false
        default: "0"
      session_start:
        description: "HH:MM (e.g., 09:20)"
        required: false
        default: ""
      session_end:
        description: "HH:MM (e.g., 15:25)"
        required: false
        default: ""
      max_trades_per_day:
        description: "Hard cap on daily trades (0 = unlimited)"
        required: false
        default: "0"

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: "Asia/Kolkata"
      PYTHONUTF8: "1"

      # (Optional) Telegram secrets — keep names as per your repo
      TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add repo to PYTHONPATH
        run: echo "PYTHONPATH=$PWD:$PYTHONPATH" >> $GITHUB_ENV

      - name: Run backtest
        id: runbt
        shell: bash
        run: |
          set -e
          mkdir -p reports logs

          echo "interval: ${{ github.event.inputs.interval }}, symbol: ${{ github.event.inputs.symbol }}"
          echo "period: ${{ github.event.inputs.start }} .. ${{ github.event.inputs.end }}"
          echo "capital: ₹${{ github.event.inputs.capital }}  qty: ${{ github.event.inputs.qty }}"

          # Build optional args
          EXTRA=""
          if [ -n "${{ github.event.inputs.slippage_bps }}" ] && [ "${{ github.event.inputs.slippage_bps }}" != "0" ]; then
            EXTRA="$EXTRA --slippage_bps ${{ github.event.inputs.slippage_bps }}"
          fi
          if [ -n "${{ github.event.inputs.broker_flat }}" ] && [ "${{ github.event.inputs.broker_flat }}" != "0" ]; then
            EXTRA="$EXTRA --broker_flat ${{ github.event.inputs.broker_flat }}"
          fi
          if [ -n "${{ github.event.inputs.broker_pct }}" ] && [ "${{ github.event.inputs.broker_pct }}" != "0" ]; then
            EXTRA="$EXTRA --broker_pct ${{ github.event.inputs.broker_pct }}"
          fi
          if [ -n "${{ github.event.inputs.session_start }}" ]; then
            EXTRA="$EXTRA --session_start ${{ github.event.inputs.session_start }}"
          fi
          if [ -n "${{ github.event.inputs.session_end }}" ]; then
            EXTRA="$EXTRA --session_end ${{ github.event.inputs.session_end }}"
          fi
          if [ -n "${{ github.event.inputs.max_trades_per_day }}" ] && [ "${{ github.event.inputs.max_trades_per_day }}" != "0" ]; then
            EXTRA="$EXTRA --max_trades_per_day ${{ github.event.inputs.max_trades_per_day }}"
          fi

          python run_backtest.py \
            --symbol "${{ github.event.inputs.symbol }}" \
            --start "${{ github.event.inputs.start }}" \
            --end   "${{ github.event.inputs.end }}" \
            --interval "${{ github.event.inputs.interval }}" \
            --outdir "./reports" \
            --qty "${{ github.event.inputs.qty }}" \
            --capital "${{ github.event.inputs.capital }}" \
            $EXTRA \
            || echo "::warning::backtest script returned non-zero; continuing to write minimal report"

      - name: Ensure minimal report (never send 'No summary available')
        run: |
          python tools/ensure_metrics.py --dir "./reports"

      - name: Upload artifacts (reports + logs)
        uses: actions/upload-artifact@v4
        with:
          name: backtest-artifacts
          path: |
            reports/**
            logs/**

      - name: Notify Telegram (summary + charts)
        if: env.TG_TOKEN != '' && env.TG_CHAT != ''
        run: |
          python tools/telegram_notify.py --dir "./reports"
